version: '2'
services:
  mongo:
    image: mongo
    container_name: mongodb
    restart: always
    hostname: localhost
    volumes:
      - ./mongodb/dbrs:/data/dbrs
      - ./rs-init.sh:/scripts/rs-init.sh
      - ./user-init.sh:/scripts/user-init.sh
    ports:
      - "0.0.0.0:27017:27017"
    environment:
      MONGO_INITDB_ROOT_DATABASE: main
      MONGO_INITDB_ROOT_USERNAME: debeziumUser
      MONGO_INITDB_ROOT_PASSWORD: debeziumUser
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  node_app:
    build: ./node-project
    container_name: node_app
    image: node_app/latest
    depends_on:
      - mongo
    environment:
      - PORT=5000
      - MONGO_URI=mongodb://debeziumUser:debeziumUser@mongo:27017?replicaSet=dbrs
      - MESSAGE_FLUSH_TIME_MS=2000
      - PRINT_MESSAGE_BOOL=true
      - DB_NAME=debezium_db
      - COLLECTION_NAME=users
      - MESSAGE_COUNT=5
    ports:
      - "5000:5000"

  mongo-ui:
    image: huggingface/mongoku
    container_name: mongo-ui
    restart: always
    environment:
      - MONGOKU_DEFAULT_HOST=mongodb://debeziumUser:debeziumUser@mongo:27017?replicaSet=dbrs
    depends_on:
      - mongo
    ports:
      - '3100:3100'

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    restart: always
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  kafka:
    image: "confluentinc/cp-kafka"
    container_name: kafka
    ports:
      - '9092:9092'
      - '29094:29094'
      - '29092:29092'
    volumes:
        - ./kafka-data/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:29092,HOST://kafka:9092,EXTERNAL://kafka:29094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,HOST://localhost:9092,EXTERNAL://never-gonna-give-you-up:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,HOST:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9080:8080
    depends_on:
      - zookeeper
      - kafka
      - kafka-connect
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka-main
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: debezium
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafka_ui
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"

  kafka-connect:
      container_name: kafka-connect
      image: debezium/connect:1.8
      ports:
        - '8083:8083'
      links:
        - kafka
        - zookeeper
      environment:
         - BOOTSTRAP_SERVERS=kafka:29092
         - GROUP_ID=mongo_debezium
         - CONFIG_STORAGE_TOPIC=my_connect_configs
         - CONFIG_STORAGE_REPLICATION_FACTOR=1
         - OFFSET_STORAGE_TOPIC=my_connect_offsets
         - OFFSET_STORAGE_REPLICATION_FACTOR=1
         - STATUS_STORAGE_TOPIC=my_connect_status
         - STATUS_STORAGE_REPLICATION_FACTOR=1
         - REST_HOST_NAME=localhost
         - CONNECT_REST_ADVERTISED_HOST_NAME=localhost
         - REST_ADVERTISED_HOST_NAME=mongo_debezium
